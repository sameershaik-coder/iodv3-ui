DJANGO + TAILWIND + HTMX SETUP GUIDE

1. Create Project and Virtual Environment
   ```bash
   mkdir myapp
   cd myapp
   python -m venv venv
   source venv/bin/activate  # On Windows: .\venv\Scripts\activate
   ```

2. Install Dependencies
   ```bash
   pip install django django-tailwind django-browser-reload
   pip freeze > requirements.txt
   ```

3. Create Django Project
   ```bash
   django-admin startproject config .
   python manage.py startapp core
   ```

4. Configure Django Settings (config/settings.py)
   ```python
   INSTALLED_APPS = [
       'django.contrib.admin',
       'django.contrib.auth',
       'django.contrib.contenttypes',
       'django.contrib.sessions',
       'django.contrib.messages',
       'django.contrib.staticfiles',
       'tailwind',
       'django_browser_reload',
       'core',
   ]

   MIDDLEWARE = [
       'django.middleware.security.SecurityMiddleware',
       'django.contrib.sessions.middleware.SessionMiddleware',
       'django.middleware.common.CommonMiddleware',
       'django.middleware.csrf.CsrfViewMiddleware',
       'django.contrib.auth.middleware.AuthenticationMiddleware',
       'django.contrib.messages.middleware.MessageMiddleware',
       'django.middleware.clickjacking.XFrameOptionsMiddleware',
       'django_browser_reload.middleware.BrowserReloadMiddleware',
   ]

   INTERNAL_IPS = [
       "127.0.0.1",
   ]

   TAILWIND_APP_NAME = 'theme'
   ```

5. Initialize Tailwind
   ```bash
   # First initialize tailwind
   python manage.py tailwind init
   
   # Then update INSTALLED_APPS in settings.py to include 'theme'
   # After this, install tailwind dependencies
   python manage.py tailwind install
   ```

6. Create Base Template (templates/base.html)
   ```html
   <!DOCTYPE html>
   <html>
   <head>
       {% load static %}
       <meta charset="UTF-8">
       <meta name="viewport" content="width=device-width, initial-scale=1.0">
       <title>My App</title>
       <script src="https://unpkg.com/htmx.org@1.9.7"></script>
       <link rel="stylesheet" href="{% static 'css/dist/styles.css' %}">
   </head>
   <body class="bg-gray-100">
       <main class="container mx-auto px-4">
           {% block content %}{% endblock %}
       </main>
   </body>
   </html>
   ```

7. Create Example View (core/views.py)
   ```python
   from django.views.generic import TemplateView

   class HomeView(TemplateView):
       template_name = "core/home.html"
   ```

8. Create Example Template (core/templates/core/home.html)
   ```html
   {% extends "base.html" %}

   {% block content %}
   <div class="py-10">
       <h1 class="text-3xl font-bold mb-4">Welcome</h1>
       <button 
           class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
           hx-post="/api/hello"
           hx-swap="outerHTML"
       >
           Click me
       </button>
   </div>
   {% endblock %}
   ```

9. Configure URLs (config/urls.py)
   ```python
   from django.contrib import admin
   from django.urls import path, include
   from core.views import HomeView

   urlpatterns = [
       path('admin/', admin.site.urls),
       path('', HomeView.as_view(), name='home'),
       path("__reload__/", include("django_browser_reload.urls")),
   ]
   ```

10. Project Structure
    ```
    myapp/
    ├── manage.py
    ├── requirements.txt
    ├── config/
    ├── core/
    ├── templates/
    ├── theme/
    └── venv/
    ```

11. Development Commands
    ```bash
    # Terminal 1: Run Django server
    python manage.py runserver

    # Terminal 2: Run Tailwind CSS compiler
    python manage.py tailwind start
    ```

Development Tips:
- Access the site at http://localhost:8000
- Tailwind CSS will auto-reload on changes
- Use hx-* attributes for HTMX interactions
- Place static files in static/ directory
- Place templates in templates/ directory

Common Commands:
```bash
# Database operations
python manage.py makemigrations
python manage.py migrate

# Create admin user
python manage.py createsuperuser

# Collect static files
python manage.py collectstatic
```

Remember to:
- Add venv/ and *.pyc to .gitignore
- Configure ALLOWED_HOSTS in settings.py
- Set DEBUG=False in production